import org.json.JSONObject;
import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;
import org.soton.seg7.ad_analytics.model.DBHandler;
import org.soton.seg7.ad_analytics.model.DBQuery;
import org.soton.seg7.ad_analytics.model.Filters;
import org.soton.seg7.ad_analytics.model.exceptions.MongoAuthException;
import org.soton.seg7.ad_analytics.model.Parser;
import org.joda.time.DateTime;
import org.joda.time.format.DateTimeFormat;
import org.joda.time.format.DateTimeFormatter;


import static org.junit.Assert.*;

import java.io.File;
import java.util.Map;
import java.util.Objects;

/**
 * Rewritten by Adam Kantorik on 15/03/2017.
 */

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class ParserTest {

    File clickFile = new File(new File("").getAbsolutePath().toString() + "/static/analytics_csv/click_log.csv");
    File impressionsFile = new File(new File("").getAbsolutePath().toString() + "/static/analytics_csv/impression_log.csv");
    File serverFile = new File(new File("").getAbsolutePath().toString() + "/static/analytics_csv/server_log.csv");

    @Test
    public void testClickLogValidator() {
        assertEquals(true, Parser.isValidClickLog(clickFile));
    }

    @Test
    public void testServerLogValidator() {
        assertEquals(true, Parser.isValidServerLog(serverFile));
    }

    @Test
    public void testImpressionLogValidator() {
        assertEquals(true, Parser.isValidImpressionLog(impressionsFile));
    }

    @Test
    public void testImpressionDayNum() {
        final Map<String, Object> expectedJsonMap = new JSONObject("{ \"2015-01-30\" : { \"00\" : 2954, \"11\" : 7168, \"22\" : 6461, \"01\" : 1157, \"12\" : 7414, \"23\" : 4437, \"02\" : 136, \"13\" : 7359, \"03\" : 137, \"14\" : 7417, \"04\" : 133, \"15\" : 7428, \"05\" : 846, \"16\" : 7267, \"06\" : 2320, \"17\" : 7338, \"07\" : 3747, \"18\" : 7364, \"08\" : 5371, \"19\" : 7328, \"09\" : 6769, \"20\" : 7245, \"10\" : 7297, \"21\" : 7155 }, \"2015-01-31\" : { \"00\" : 2814, \"11\" : 9847, \"22\" : 8221, \"01\" : 977, \"12\" : 9701, \"23\" : 5899, \"02\" : 117, \"13\" : 9680, \"03\" : 167, \"14\" : 9638, \"04\" : 156, \"15\" : 9603, \"05\" : 1123, \"16\" : 9709, \"06\" : 3222, \"17\" : 9735, \"07\" : 5224, \"18\" : 9512, \"08\" : 7002, \"19\" : 9413, \"09\" : 8858, \"20\" : 9508, \"10\" : 9791, \"21\" : 9474 }, \"2015-01-27\" : { \"00\" : 2838, \"11\" : 8629, \"22\" : 6151, \"01\" : 1016, \"12\" : 8290, \"23\" : 4380, \"02\" : 139, \"13\" : 8178, \"03\" : 97, \"14\" : 8029, \"04\" : 106, \"15\" : 7967, \"05\" : 999, \"16\" : 7885, \"06\" : 2759, \"17\" : 7566, \"07\" : 4290, \"18\" : 7544, \"08\" : 6161, \"19\" : 7420, \"09\" : 7987, \"20\" : 7330, \"10\" : 8724, \"21\" : 6979 }, \"2015-01-28\" : { \"00\" : 2683, \"11\" : 6786, \"22\" : 6995, \"01\" : 956, \"12\" : 6884, \"23\" : 4941, \"02\" : 149, \"13\" : 7253, \"03\" : 122, \"14\" : 7091, \"04\" : 111, \"15\" : 7191, \"05\" : 764, \"16\" : 7332, \"06\" : 2080, \"17\" : 7485, \"07\" : 3402, \"18\" : 7488, \"08\" : 4674, \"19\" : 7698, \"09\" : 5917, \"20\" : 7620, \"10\" : 6742, \"21\" : 7836 }, \"2015-01-25\" : { \"00\" : 2326, \"11\" : 5982, \"22\" : 7485, \"01\" : 894, \"12\" : 6279, \"23\" : 5272, \"02\" : 123, \"13\" : 6327, \"03\" : 93, \"14\" : 6537, \"04\" : 111, \"15\" : 6922, \"05\" : 647, \"16\" : 7148, \"06\" : 1709, \"17\" : 7346, \"07\" : 2781, \"18\" : 7568, \"08\" : 4052, \"19\" : 7743, \"09\" : 5251, \"20\" : 8099, \"10\" : 5778, \"21\" : 8145 }, \"2015-01-26\" : { \"00\" : 3131, \"11\" : 8095, \"22\" : 6242, \"01\" : 1194, \"12\" : 7855, \"23\" : 4604, \"02\" : 126, \"13\" : 7922, \"03\" : 140, \"14\" : 7863, \"04\" : 129, \"15\" : 7840, \"05\" : 914, \"16\" : 7661, \"06\" : 2568, \"17\" : 7547, \"07\" : 4171, \"18\" : 7314, \"08\" : 5760, \"19\" : 7521, \"09\" : 7468, \"20\" : 7303, \"10\" : 8188, \"21\" : 7256 }, \"2015-01-23\" : { \"00\" : 2740, \"11\" : 8404, \"22\" : 5514, \"01\" : 1013, \"12\" : 8014, \"23\" : 4026, \"02\" : 133, \"13\" : 7661, \"03\" : 147, \"14\" : 7631, \"04\" : 129, \"15\" : 7472, \"05\" : 931, \"16\" : 7505, \"06\" : 2643, \"17\" : 6978, \"07\" : 4417, \"18\" : 6997, \"08\" : 6069, \"19\" : 6801, \"09\" : 7656, \"20\" : 6600, \"10\" : 8610, \"21\" : 6390 }, \"2015-01-24\" : { \"00\" : 2430, \"11\" : 6940, \"22\" : 5194, \"01\" : 917, \"12\" : 6746, \"23\" : 3676, \"02\" : 115, \"13\" : 6936, \"03\" : 116, \"14\" : 6566, \"04\" : 126, \"15\" : 6477, \"05\" : 808, \"16\" : 6465, \"06\" : 2139, \"17\" : 6157, \"07\" : 3684, \"18\" : 6197, \"08\" : 5033, \"19\" : 6220, \"09\" : 6291, \"20\" : 5924, \"10\" : 7132, \"21\" : 5852 }, \"2015-01-21\" : { \"00\" : 2522, \"11\" : 7792, \"22\" : 7760, \"01\" : 989, \"12\" : 8003, \"23\" : 5629, \"02\" : 132, \"13\" : 7934, \"03\" : 105, \"14\" : 8001, \"04\" : 98, \"15\" : 8026, \"05\" : 836, \"16\" : 8245, \"06\" : 2411, \"17\" : 8337, \"07\" : 3882, \"18\" : 8512, \"08\" : 5314, \"19\" : 8801, \"09\" : 6821, \"20\" : 8839, \"10\" : 7601, \"21\" : 8702 }, \"2015-01-22\" : { \"00\" : 3398, \"11\" : 8960, \"22\" : 6115, \"01\" : 1188, \"12\" : 8521, \"23\" : 4418, \"02\" : 155, \"13\" : 8400, \"03\" : 144, \"14\" : 8059, \"04\" : 136, \"15\" : 8049, \"05\" : 961, \"16\" : 7866, \"06\" : 2755, \"17\" : 7791, \"07\" : 4600, \"18\" : 7395, \"08\" : 6508, \"19\" : 7396, \"09\" : 8120, \"20\" : 7306, \"10\" : 8952, \"21\" : 7068 }, \"2015-01-29\" : { \"00\" : 3131, \"11\" : 7030, \"22\" : 7046, \"01\" : 1091, \"12\" : 6945, \"23\" : 5164, \"02\" : 112, \"13\" : 7212, \"03\" : 131, \"14\" : 7322, \"04\" : 120, \"15\" : 7349, \"05\" : 796, \"16\" : 7192, \"06\" : 2101, \"17\" : 7408, \"07\" : 3429, \"18\" : 7603, \"08\" : 4753, \"19\" : 7748, \"09\" : 6070, \"20\" : 7932, \"10\" : 6805, \"21\" : 8019 }, \"2015-01-20\" : { \"00\" : 1913, \"11\" : 5139, \"22\" : 5659, \"01\" : 706, \"12\" : 5343, \"23\" : 4181, \"02\" : 111, \"13\" : 5405, \"03\" : 105, \"14\" : 5529, \"04\" : 117, \"15\" : 5709, \"05\" : 613, \"16\" : 5727, \"06\" : 1522, \"17\" : 6111, \"07\" : 2484, \"18\" : 6040, \"08\" : 3558, \"19\" : 6014, \"09\" : 4362, \"20\" : 6192, \"10\" : 5141, \"21\" : 6471 }, \"2015-01-16\" : { \"00\" : 2462, \"11\" : 5857, \"22\" : 6110, \"01\" : 901, \"12\" : 5917, \"23\" : 4433, \"02\" : 119, \"13\" : 6026, \"03\" : 130, \"14\" : 6157, \"04\" : 118, \"15\" : 6311, \"05\" : 727, \"16\" : 6494, \"06\" : 1783, \"17\" : 6551, \"07\" : 2851, \"18\" : 6676, \"08\" : 3970, \"19\" : 6869, \"09\" : 5238, \"20\" : 6710, \"10\" : 5749, \"21\" : 6906 }, \"2015-02-28\" : { \"00\" : 6342, \"11\" : 12850, \"01\" : 2370, \"12\" : 1, \"02\" : 263, \"03\" : 266, \"04\" : 186, \"05\" : 1455, \"06\" : 4064, \"07\" : 6678, \"08\" : 9007, \"09\" : 11645, \"10\" : 12738 }, \"2015-01-17\" : { \"00\" : 2623, \"11\" : 5503, \"22\" : 5322, \"01\" : 1016, \"12\" : 5590, \"23\" : 3817, \"02\" : 87, \"13\" : 5724, \"03\" : 118, \"14\" : 5806, \"04\" : 107, \"15\" : 5647, \"05\" : 625, \"16\" : 5796, \"06\" : 1765, \"17\" : 5770, \"07\" : 2784, \"18\" : 5955, \"08\" : 3963, \"19\" : 5982, \"09\" : 4927, \"20\" : 6009, \"10\" : 5578, \"21\" : 5997 }, \"2015-01-14\" : { \"00\" : 2267, \"11\" : 6916, \"22\" : 6384, \"01\" : 833, \"12\" : 6946, \"23\" : 4710, \"02\" : 107, \"13\" : 7223, \"03\" : 103, \"14\" : 6909, \"04\" : 118, \"15\" : 7110, \"05\" : 790, \"16\" : 7226, \"06\" : 2149, \"17\" : 7096, \"07\" : 3473, \"18\" : 7182, \"08\" : 4773, \"19\" : 7094, \"09\" : 6130, \"20\" : 7321, \"10\" : 6932, \"21\" : 7341 }, \"2015-02-26\" : { \"00\" : 6316, \"11\" : 14888, \"22\" : 10537, \"01\" : 2269, \"12\" : 14361, \"23\" : 7628, \"02\" : 219, \"13\" : 14010, \"03\" : 221, \"14\" : 13818, \"04\" : 174, \"15\" : 13861, \"05\" : 1680, \"16\" : 13283, \"06\" : 4641, \"17\" : 12939, \"07\" : 7665, \"18\" : 12897, \"08\" : 10671, \"19\" : 12694, \"09\" : 13485, \"20\" : 12142, \"10\" : 14970, \"21\" : 12204 }, \"2015-01-15\" : { \"00\" : 2751, \"11\" : 8122, \"22\" : 5566, \"01\" : 920, \"12\" : 7982, \"23\" : 3978, \"02\" : 115, \"13\" : 7902, \"03\" : 121, \"14\" : 7743, \"04\" : 131, \"15\" : 7645, \"05\" : 925, \"16\" : 7477, \"06\" : 2616, \"17\" : 7017, \"07\" : 4242, \"18\" : 6984, \"08\" : 5936, \"19\" : 6969, \"09\" : 7590, \"20\" : 6712, \"10\" : 8270, \"21\" : 6552 }, \"2015-02-27\" : { \"00\" : 4718, \"11\" : 12253, \"22\" : 14423, \"01\" : 1751, \"12\" : 12736, \"23\" : 10298, \"02\" : 234, \"13\" : 12977, \"03\" : 250, \"14\" : 13547, \"04\" : 264, \"15\" : 13779, \"05\" : 1356, \"16\" : 14270, \"06\" : 3633, \"17\" : 14547, \"07\" : 5986, \"18\" : 15158, \"08\" : 8027, \"19\" : 15573, \"09\" : 10506, \"20\" : 15857, \"10\" : 11822, \"21\" : 16435 }, \"2015-01-12\" : { \"00\" : 3849, \"11\" : 6905, \"22\" : 5516, \"01\" : 1325, \"12\" : 7064, \"23\" : 4089, \"02\" : 121, \"13\" : 7055, \"03\" : 127, \"14\" : 6924, \"04\" : 118, \"15\" : 6797, \"05\" : 847, \"16\" : 6702, \"06\" : 2247, \"17\" : 6588, \"07\" : 3672, \"18\" : 6601, \"08\" : 5125, \"19\" : 6509, \"09\" : 6425, \"20\" : 6589, \"10\" : 7307, \"21\" : 6500 }, \"2015-02-24\" : { \"00\" : 4980, \"11\" : 15009, \"22\" : 12180, \"01\" : 1831, \"12\" : 14576, \"23\" : 8650, \"02\" : 184, \"13\" : 14725, \"03\" : 193, \"14\" : 14698, \"04\" : 230, \"15\" : 14494, \"05\" : 1710, \"16\" : 14360, \"06\" : 4749, \"17\" : 14453, \"07\" : 7696, \"18\" : 14208, \"08\" : 10625, \"19\" : 14063, \"09\" : 13643, \"20\" : 14001, \"10\" : 15042, \"21\" : 13766 }, \"2015-01-13\" : { \"00\" : 2544, \"11\" : 7274, \"22\" : 5222, \"01\" : 824, \"12\" : 7234, \"23\" : 3766, \"02\" : 140, \"13\" : 7003, \"03\" : 124, \"14\" : 6876, \"04\" : 115, \"15\" : 6709, \"05\" : 843, \"16\" : 6529, \"06\" : 2309, \"17\" : 6612, \"07\" : 3764, \"18\" : 6506, \"08\" : 5359, \"19\" : 6122, \"09\" : 6664, \"20\" : 6233, \"10\" : 7489, \"21\" : 6030 }, \"2015-02-25\" : { \"00\" : 5225, \"11\" : 14568, \"22\" : 14405, \"01\" : 1872, \"12\" : 14893, \"23\" : 10216, \"02\" : 202, \"13\" : 15166, \"03\" : 208, \"14\" : 15091, \"04\" : 189, \"15\" : 15315, \"05\" : 1679, \"16\" : 15639, \"06\" : 4513, \"17\" : 15642, \"07\" : 7275, \"18\" : 15784, \"08\" : 9847, \"19\" : 16022, \"09\" : 13018, \"20\" : 16303, \"10\" : 14348, \"21\" : 16160 }, \"2015-01-10\" : { \"00\" : 2751, \"11\" : 7535, \"22\" : 6982, \"01\" : 1030, \"12\" : 7358, \"23\" : 4989, \"02\" : 126, \"13\" : 7543, \"03\" : 122, \"14\" : 7604, \"04\" : 122, \"15\" : 7548, \"05\" : 810, \"16\" : 7614, \"06\" : 2266, \"17\" : 7611, \"07\" : 3837, \"18\" : 7727, \"08\" : 5279, \"19\" : 7816, \"09\" : 6797, \"20\" : 7684, \"10\" : 7314, \"21\" : 7906 }, \"2015-02-22\" : { \"00\" : 5115, \"11\" : 11702, \"22\" : 14301, \"01\" : 1852, \"12\" : 11944, \"23\" : 10325, \"02\" : 263, \"13\" : 12475, \"03\" : 226, \"14\" : 12998, \"04\" : 202, \"15\" : 13538, \"05\" : 1211, \"16\" : 13479, \"06\" : 3413, \"17\" : 13908, \"07\" : 5615, \"18\" : 14569, \"08\" : 7793, \"19\" : 15324, \"09\" : 9728, \"20\" : 15437, \"10\" : 11034, \"21\" : 15922 }, \"2015-01-11\" : { \"00\" : 2990, \"11\" : 7345, \"22\" : 8651, \"01\" : 1142, \"12\" : 7693, \"23\" : 6141, \"02\" : 122, \"13\" : 7934, \"03\" : 148, \"14\" : 8042, \"04\" : 129, \"15\" : 8312, \"05\" : 863, \"16\" : 8715, \"06\" : 2144, \"17\" : 8781, \"07\" : 3547, \"18\" : 9178, \"08\" : 4901, \"19\" : 9215, \"09\" : 6177, \"20\" : 9552, \"10\" : 7043, \"21\" : 9649 }, \"2015-02-23\" : { \"00\" : 6155, \"11\" : 13724, \"22\" : 11188, \"01\" : 2249, \"12\" : 13559, \"23\" : 8173, \"02\" : 204, \"13\" : 13735, \"03\" : 207, \"14\" : 13460, \"04\" : 237, \"15\" : 13388, \"05\" : 1625, \"16\" : 13240, \"06\" : 4334, \"17\" : 13064, \"07\" : 7174, \"18\" : 13070, \"08\" : 9799, \"19\" : 13129, \"09\" : 12297, \"20\" : 12835, \"10\" : 13602, \"21\" : 12972 }, \"2015-01-18\" : { \"00\" : 2278, \"11\" : 5770, \"22\" : 6365, \"01\" : 867, \"12\" : 5964, \"23\" : 4560, \"02\" : 103, \"13\" : 6076, \"03\" : 93, \"14\" : 6210, \"04\" : 115, \"15\" : 6355, \"05\" : 674, \"16\" : 6568, \"06\" : 1740, \"17\" : 6646, \"07\" : 2878, \"18\" : 6876, \"08\" : 4044, \"19\" : 6944, \"09\" : 5097, \"20\" : 7208, \"10\" : 5820, \"21\" : 7113 }, \"2015-01-19\" : { \"00\" : 2807, \"11\" : 5261, \"22\" : 4202, \"01\" : 953, \"12\" : 5185, \"23\" : 3036, \"02\" : 93, \"13\" : 5111, \"03\" : 108, \"14\" : 5229, \"04\" : 80, \"15\" : 5190, \"05\" : 651, \"16\" : 5016, \"06\" : 1664, \"17\" : 4974, \"07\" : 2730, \"18\" : 4963, \"08\" : 3859, \"19\" : 4909, \"09\" : 4808, \"20\" : 4773, \"10\" : 5350, \"21\" : 4778 }, \"2015-02-20\" : { \"00\" : 5125, \"11\" : 13893, \"22\" : 11894, \"01\" : 1903, \"12\" : 13912, \"23\" : 8716, \"02\" : 220, \"13\" : 13832, \"03\" : 240, \"14\" : 14001, \"04\" : 260, \"15\" : 14003, \"05\" : 1637, \"16\" : 13783, \"06\" : 4393, \"17\" : 13983, \"07\" : 7242, \"18\" : 13949, \"08\" : 9997, \"19\" : 13689, \"09\" : 12689, \"20\" : 13853, \"10\" : 14073, \"21\" : 13622 }, \"2015-02-21\" : { \"00\" : 5305, \"11\" : 13945, \"22\" : 11360, \"01\" : 1927, \"12\" : 13979, \"23\" : 8205, \"02\" : 252, \"13\" : 13893, \"03\" : 262, \"14\" : 13604, \"04\" : 217, \"15\" : 13481, \"05\" : 1592, \"16\" : 13414, \"06\" : 4420, \"17\" : 13494, \"07\" : 6908, \"18\" : 13013, \"08\" : 9931, \"19\" : 13221, \"09\" : 12729, \"20\" : 13208, \"10\" : 13932, \"21\" : 12968 }, \"2015-01-05\" : { \"00\" : 2676, \"11\" : 6714, \"22\" : 4558, \"01\" : 952, \"12\" : 6586, \"23\" : 3431, \"02\" : 107, \"13\" : 6350, \"03\" : 82, \"14\" : 6301, \"04\" : 72, \"15\" : 6188, \"05\" : 725, \"16\" : 6179, \"06\" : 2114, \"17\" : 6132, \"07\" : 3576, \"18\" : 5779, \"08\" : 4852, \"19\" : 5760, \"09\" : 6232, \"20\" : 5577, \"10\" : 6855, \"21\" : 5505 }, \"2015-02-17\" : { \"00\" : 4764, \"11\" : 14267, \"22\" : 10563, \"01\" : 1864, \"12\" : 13938, \"23\" : 7760, \"02\" : 225, \"13\" : 13744, \"03\" : 212, \"14\" : 13528, \"04\" : 221, \"15\" : 13502, \"05\" : 1616, \"16\" : 13221, \"06\" : 4573, \"17\" : 12772, \"07\" : 7327, \"18\" : 12750, \"08\" : 10397, \"19\" : 12435, \"09\" : 13162, \"20\" : 12468, \"10\" : 14562, \"21\" : 12181 }, \"2015-01-06\" : { \"00\" : 2101, \"11\" : 7718, \"22\" : 4818, \"01\" : 793, \"12\" : 7504, \"23\" : 3447, \"02\" : 102, \"13\" : 7441, \"03\" : 91, \"14\" : 7000, \"04\" : 126, \"15\" : 6804, \"05\" : 899, \"16\" : 6766, \"06\" : 2578, \"17\" : 6331, \"07\" : 3975, \"18\" : 6216, \"08\" : 5714, \"19\" : 5918, \"09\" : 7240, \"20\" : 5761, \"10\" : 7766, \"21\" : 5621 }, \"2015-02-18\" : { \"00\" : 4615, \"11\" : 14199, \"22\" : 10007, \"01\" : 1721, \"12\" : 14185, \"23\" : 7480, \"02\" : 232, \"13\" : 13727, \"03\" : 218, \"14\" : 13451, \"04\" : 187, \"15\" : 13483, \"05\" : 1707, \"16\" : 13105, \"06\" : 4628, \"17\" : 12856, \"07\" : 7469, \"18\" : 12651, \"08\" : 10319, \"19\" : 12259, \"09\" : 13164, \"20\" : 12049, \"10\" : 14673, \"21\" : 11618 }, \"2015-01-03\" : { \"00\" : 2778, \"11\" : 5583, \"22\" : 6231, \"01\" : 1033, \"12\" : 5865, \"23\" : 4423, \"02\" : 111, \"13\" : 5781, \"03\" : 109, \"14\" : 6095, \"04\" : 125, \"15\" : 6266, \"05\" : 619, \"16\" : 6355, \"06\" : 1729, \"17\" : 6501, \"07\" : 2724, \"18\" : 6611, \"08\" : 3984, \"19\" : 6675, \"09\" : 5007, \"20\" : 6977, \"10\" : 5619, \"21\" : 7006 }, \"2015-02-15\" : { \"00\" : 5095, \"11\" : 11372, \"22\" : 10720, \"01\" : 1815, \"12\" : 11519, \"23\" : 7608, \"02\" : 218, \"13\" : 11427, \"03\" : 201, \"14\" : 11622, \"04\" : 182, \"15\" : 11727, \"05\" : 1207, \"16\" : 11795, \"06\" : 3455, \"17\" : 11729, \"07\" : 5643, \"18\" : 11638, \"08\" : 7895, \"19\" : 12058, \"09\" : 10284, \"20\" : 12160, \"10\" : 11433, \"21\" : 12115 }, \"2015-01-04\" : { \"00\" : 2760, \"11\" : 6717, \"22\" : 6282, \"01\" : 936, \"12\" : 6860, \"23\" : 4575, \"02\" : 105, \"13\" : 6845, \"03\" : 117, \"14\" : 6781, \"04\" : 124, \"15\" : 7005, \"05\" : 770, \"16\" : 6895, \"06\" : 2033, \"17\" : 6858, \"07\" : 3313, \"18\" : 6968, \"08\" : 4708, \"19\" : 7003, \"09\" : 5996, \"20\" : 7105, \"10\" : 6724, \"21\" : 7159 }, \"2015-02-16\" : { \"00\" : 4615, \"11\" : 13799, \"22\" : 11131, \"01\" : 1742, \"12\" : 13331, \"23\" : 8128, \"02\" : 188, \"13\" : 13403, \"03\" : 187, \"14\" : 13296, \"04\" : 181, \"15\" : 13304, \"05\" : 1513, \"16\" : 12961, \"06\" : 4258, \"17\" : 13134, \"07\" : 6889, \"18\" : 13071, \"08\" : 9808, \"19\" : 12768, \"09\" : 12355, \"20\" : 12902, \"10\" : 13659, \"21\" : 12668 }, \"2015-01-01\" : { \"22\" : 5914, \"12\" : 6107, \"23\" : 4258, \"13\" : 6260, \"14\" : 6332, \"15\" : 6361, \"16\" : 6490, \"17\" : 6545, \"18\" : 6460, \"19\" : 6438, \"20\" : 6771, \"21\" : 6642 }, \"2015-02-13\" : { \"00\" : 4365, \"11\" : 9904, \"22\" : 7920, \"01\" : 1586, \"12\" : 9965, \"23\" : 5788, \"02\" : 187, \"13\" : 9833, \"03\" : 150, \"14\" : 9582, \"04\" : 182, \"15\" : 9674, \"05\" : 1176, \"16\" : 9527, \"06\" : 3271, \"17\" : 9590, \"07\" : 5181, \"18\" : 9576, \"08\" : 7140, \"19\" : 9256, \"09\" : 9061, \"20\" : 9135, \"10\" : 9972, \"21\" : 9207 }, \"2015-01-02\" : { \"00\" : 2514, \"11\" : 5620, \"22\" : 6259, \"01\" : 950, \"12\" : 5749, \"23\" : 4455, \"02\" : 81, \"13\" : 5977, \"03\" : 97, \"14\" : 6115, \"04\" : 80, \"15\" : 6227, \"05\" : 579, \"16\" : 6431, \"06\" : 1665, \"17\" : 6487, \"07\" : 2751, \"18\" : 6755, \"08\" : 3853, \"19\" : 6681, \"09\" : 4712, \"20\" : 6928, \"10\" : 5530, \"21\" : 7138 }, \"2015-02-14\" : { \"00\" : 3540, \"11\" : 12700, \"22\" : 11463, \"01\" : 1335, \"12\" : 12849, \"23\" : 8179, \"02\" : 166, \"13\" : 12794, \"03\" : 174, \"14\" : 12948, \"04\" : 171, \"15\" : 13028, \"05\" : 1500, \"16\" : 12970, \"06\" : 4001, \"17\" : 13056, \"07\" : 6388, \"18\" : 12997, \"08\" : 8785, \"19\" : 12873, \"09\" : 11534, \"20\" : 12919, \"10\" : 12658, \"21\" : 12975 }, \"2015-02-11\" : { \"00\" : 3782, \"11\" : 9384, \"22\" : 8645, \"01\" : 1398, \"12\" : 9435, \"23\" : 6324, \"02\" : 200, \"13\" : 9502, \"03\" : 192, \"14\" : 9526, \"04\" : 166, \"15\" : 9498, \"05\" : 1097, \"16\" : 9648, \"06\" : 2849, \"17\" : 9735, \"07\" : 4868, \"18\" : 9841, \"08\" : 6400, \"19\" : 9717, \"09\" : 8286, \"20\" : 9860, \"10\" : 9352, \"21\" : 9999 }, \"2015-02-12\" : { \"00\" : 3761, \"11\" : 11212, \"22\" : 10238, \"01\" : 1408, \"12\" : 10992, \"23\" : 7154, \"02\" : 172, \"13\" : 11115, \"03\" : 191, \"14\" : 11151, \"04\" : 167, \"15\" : 11294, \"05\" : 1257, \"16\" : 11216, \"06\" : 3481, \"17\" : 11197, \"07\" : 5558, \"18\" : 11348, \"08\" : 7734, \"19\" : 11300, \"09\" : 9716, \"20\" : 11313, \"10\" : 11019, \"21\" : 11546 }, \"2015-01-09\" : { \"00\" : 2682, \"11\" : 7845, \"22\" : 6183, \"01\" : 974, \"12\" : 7634, \"23\" : 4364, \"02\" : 114, \"13\" : 7525, \"03\" : 147, \"14\" : 7518, \"04\" : 122, \"15\" : 7499, \"05\" : 885, \"16\" : 7480, \"06\" : 2441, \"17\" : 7201, \"07\" : 3956, \"18\" : 7216, \"08\" : 5542, \"19\" : 7171, \"09\" : 7006, \"20\" : 6998, \"10\" : 7803, \"21\" : 6972 }, \"2015-01-07\" : { \"00\" : 2150, \"11\" : 7153, \"22\" : 5681, \"01\" : 708, \"12\" : 6981, \"23\" : 4132, \"02\" : 116, \"13\" : 7048, \"03\" : 94, \"14\" : 6952, \"04\" : 81, \"15\" : 6828, \"05\" : 769, \"16\" : 6755, \"06\" : 2255, \"17\" : 6822, \"07\" : 3601, \"18\" : 6717, \"08\" : 5186, \"19\" : 6725, \"09\" : 6441, \"20\" : 6647, \"10\" : 7091, \"21\" : 6506 }, \"2015-02-19\" : { \"00\" : 4552, \"11\" : 12999, \"22\" : 11743, \"01\" : 1674, \"12\" : 13316, \"23\" : 8461, \"02\" : 195, \"13\" : 13209, \"03\" : 227, \"14\" : 13203, \"04\" : 246, \"15\" : 13243, \"05\" : 1496, \"16\" : 13018, \"06\" : 4194, \"17\" : 13218, \"07\" : 6783, \"18\" : 13087, \"08\" : 9105, \"19\" : 13221, \"09\" : 11744, \"20\" : 13269, \"10\" : 13204, \"21\" : 13123 }, \"2015-01-08\" : { \"00\" : 2496, \"11\" : 7615, \"22\" : 6093, \"01\" : 918, \"12\" : 7625, \"23\" : 4461, \"02\" : 132, \"13\" : 7560, \"03\" : 115, \"14\" : 7673, \"04\" : 111, \"15\" : 7524, \"05\" : 884, \"16\" : 7284, \"06\" : 2434, \"17\" : 7291, \"07\" : 3994, \"18\" : 7093, \"08\" : 5539, \"19\" : 7156, \"09\" : 7034, \"20\" : 7047, \"10\" : 7708, \"21\" : 6971 }, \"2015-02-10\" : { \"00\" : 4942, \"11\" : 11617, \"22\" : 8638, \"01\" : 1747, \"12\" : 11384, \"23\" : 6155, \"02\" : 188, \"13\" : 11259, \"03\" : 176, \"14\" : 11110, \"04\" : 133, \"15\" : 10906, \"05\" : 1347, \"16\" : 10931, \"06\" : 3666, \"17\" : 10537, \"07\" : 6107, \"18\" : 10412, \"08\" : 8486, \"19\" : 10272, \"09\" : 10920, \"20\" : 10033, \"10\" : 11891, \"21\" : 9878 }, \"2015-02-06\" : { \"00\" : 3373, \"11\" : 9183, \"22\" : 8955, \"01\" : 1297, \"12\" : 9452, \"23\" : 6331, \"02\" : 166, \"13\" : 9394, \"03\" : 153, \"14\" : 9467, \"04\" : 151, \"15\" : 9663, \"05\" : 1052, \"16\" : 9809, \"06\" : 2857, \"17\" : 9952, \"07\" : 4568, \"18\" : 9755, \"08\" : 6330, \"19\" : 9854, \"09\" : 8326, \"20\" : 9968, \"10\" : 9288, \"21\" : 10060 }, \"2015-02-07\" : { \"00\" : 3842, \"11\" : 8121, \"22\" : 9036, \"01\" : 1413, \"12\" : 8174, \"23\" : 6516, \"02\" : 165, \"13\" : 8535, \"03\" : 129, \"14\" : 8586, \"04\" : 148, \"15\" : 9173, \"05\" : 922, \"16\" : 9097, \"06\" : 2406, \"17\" : 9357, \"07\" : 3876, \"18\" : 9605, \"08\" : 5412, \"19\" : 9801, \"09\" : 7106, \"20\" : 9862, \"10\" : 7902, \"21\" : 10088 }, \"2015-02-04\" : { \"00\" : 3058, \"11\" : 8418, \"22\" : 8057, \"01\" : 1083, \"12\" : 8526, \"23\" : 5663, \"02\" : 157, \"13\" : 8658, \"03\" : 172, \"14\" : 8677, \"04\" : 157, \"15\" : 8838, \"05\" : 1011, \"16\" : 8857, \"06\" : 2606, \"17\" : 8742, \"07\" : 4346, \"18\" : 8808, \"08\" : 5911, \"19\" : 8772, \"09\" : 7653, \"20\" : 9036, \"10\" : 8523, \"21\" : 9216 }, \"2015-02-05\" : { \"00\" : 3486, \"11\" : 9411, \"22\" : 7546, \"01\" : 1288, \"12\" : 9122, \"23\" : 5432, \"02\" : 171, \"13\" : 8988, \"03\" : 151, \"14\" : 9193, \"04\" : 155, \"15\" : 9170, \"05\" : 1081, \"16\" : 8887, \"06\" : 2971, \"17\" : 9101, \"07\" : 4685, \"18\" : 8913, \"08\" : 6596, \"19\" : 8843, \"09\" : 8518, \"20\" : 8699, \"10\" : 9424, \"21\" : 8606 }, \"2015-02-02\" : { \"00\" : 2591, \"11\" : 7838, \"22\" : 6279, \"01\" : 940, \"12\" : 7760, \"23\" : 4588, \"02\" : 125, \"13\" : 7532, \"03\" : 147, \"14\" : 7490, \"04\" : 159, \"15\" : 7737, \"05\" : 940, \"16\" : 7391, \"06\" : 2599, \"17\" : 7450, \"07\" : 4049, \"18\" : 7379, \"08\" : 5607, \"19\" : 7347, \"09\" : 7077, \"20\" : 7254, \"10\" : 7893, \"21\" : 7284 }, \"2015-02-03\" : { \"00\" : 2780, \"11\" : 6761, \"22\" : 6643, \"01\" : 1013, \"12\" : 6661, \"23\" : 4956, \"02\" : 136, \"13\" : 6882, \"03\" : 127, \"14\" : 6957, \"04\" : 141, \"15\" : 7150, \"05\" : 761, \"16\" : 7168, \"06\" : 2063, \"17\" : 7244, \"07\" : 3451, \"18\" : 7327, \"08\" : 4690, \"19\" : 7354, \"09\" : 5885, \"20\" : 7554, \"10\" : 6745, \"21\" : 7613 }, \"2015-02-01\" : { \"00\" : 3651, \"11\" : 6621, \"22\" : 5716, \"01\" : 1360, \"12\" : 6563, \"23\" : 4034, \"02\" : 139, \"13\" : 6725, \"03\" : 128, \"14\" : 6487, \"04\" : 143, \"15\" : 6608, \"05\" : 791, \"16\" : 6580, \"06\" : 2170, \"17\" : 6590, \"07\" : 3366, \"18\" : 6503, \"08\" : 4570, \"19\" : 6613, \"09\" : 5900, \"20\" : 6503, \"10\" : 6596, \"21\" : 6670 }, \"2015-02-08\" : { \"00\" : 3952, \"11\" : 9957, \"22\" : 9885, \"01\" : 1378, \"12\" : 9974, \"23\" : 7158, \"02\" : 182, \"13\" : 10218, \"03\" : 199, \"14\" : 10334, \"04\" : 186, \"15\" : 10234, \"05\" : 1153, \"16\" : 10492, \"06\" : 3116, \"17\" : 10681, \"07\" : 4929, \"18\" : 10867, \"08\" : 6866, \"19\" : 11007, \"09\" : 8764, \"20\" : 11209, \"10\" : 9464, \"21\" : 11209 }, \"2015-02-09\" : { \"00\" : 4265, \"11\" : 12022, \"22\" : 11244, \"01\" : 1590, \"12\" : 12245, \"23\" : 7951, \"02\" : 222, \"13\" : 12156, \"03\" : 179, \"14\" : 12203, \"04\" : 199, \"15\" : 12253, \"05\" : 1349, \"16\" : 12409, \"06\" : 3663, \"17\" : 12488, \"07\" : 6118, \"18\" : 12391, \"08\" : 8249, \"19\" : 12426, \"09\" : 10602, \"20\" : 12506, \"10\" : 12191, \"21\" : 12577 } }".replace(" ", "")).toMap();

        DBHandler handler;

        try {
            handler = DBHandler.getDBConnection();
            handler.dropCollection("impression_log");
            handler.dropCollection("impression_data");

            Parser.parseCSV(impressionsFile);
            Map<DateTime, Double> resNumImpressions = DBQuery.getNumImpressions(Filters.NO_FILTER);

			System.out.println("Test impression day num");
            for (Map.Entry<DateTime, Double> entry : resNumImpressions.entrySet())
			{
			    System.out.println("inside loop");
    			System.out.println(entry.getKey() + " : " + entry.getValue());
			}
            assertEquals("Correct Num Impressions in file", expectedJsonMap, resNumImpressions);
        } catch (MongoAuthException e) {
            e.printStackTrace();
        }
    }

    @Test
    public void testClickDayNum() {
        final Map<String, Object> expectedJsonMap = new JSONObject("{2015-01-05={00=19, 11=92, 22=58, 01=5, 12=95, 23=31, 02=7, 13=108, 03=6, 14=100, 04=26, 15=117, 05=33, 16=108, 06=49, 17=122, 07=69, 18=113, 08=82, 19=127, 09=116, 20=98, 10=98, 21=68}, 2015-01-06={00=18, 11=111, 22=51, 01=5, 12=114, 23=45, 02=4, 13=122, 03=5, 14=112, 04=14, 15=118, 05=26, 16=94, 06=59, 17=105, 07=91, 18=122, 08=109, 19=105, 09=116, 20=99, 10=116, 21=72}, 2015-01-03={00=16, 11=108, 22=56, 01=3, 12=93, 23=33, 02=4, 13=98, 03=3, 14=95, 04=10, 15=120, 05=31, 16=126, 06=69, 17=104, 07=76, 18=108, 08=103, 19=122, 09=89, 20=90, 10=122, 21=75}, 2015-01-14={00=18, 11=142, 01=4, 02=5, 03=1, 04=20, 05=48, 06=54, 07=77, 08=104, 09=126, 10=127}, 2015-01-04={00=19, 11=93, 22=46, 01=4, 12=93, 23=33, 02=8, 13=90, 03=5, 14=93, 04=16, 15=100, 05=36, 16=107, 06=51, 17=116, 07=72, 18=107, 08=73, 19=116, 09=88, 20=97, 10=85, 21=83}, 2015-01-01={22=49, 12=94, 23=34, 13=96, 14=115, 15=105, 16=110, 17=98, 18=102, 19=104, 20=88, 21=84}, 2015-01-12={00=16, 11=151, 22=80, 01=2, 12=128, 23=33, 02=6, 13=135, 03=6, 14=129, 04=12, 15=140, 05=25, 16=138, 06=61, 17=101, 07=85, 18=128, 08=107, 19=115, 09=127, 20=96, 10=121, 21=82}, 2015-01-02={00=12, 11=79, 22=72, 01=8, 12=117, 23=47, 02=3, 13=116, 03=4, 14=97, 04=12, 15=101, 05=26, 16=90, 06=41, 17=98, 07=65, 18=93, 08=86, 19=95, 09=92, 20=108, 10=100, 21=76}, 2015-01-13={00=16, 11=143, 22=50, 01=10, 12=116, 23=30, 02=8, 13=127, 03=5, 14=138, 04=14, 15=124, 05=49, 16=120, 06=61, 17=136, 07=92, 18=107, 08=131, 19=148, 09=138, 20=92, 10=137, 21=61}, 2015-01-10={00=18, 11=112, 22=59, 01=9, 12=110, 23=36, 02=8, 13=97, 03=4, 14=84, 04=10, 15=133, 05=44, 16=101, 06=63, 17=107, 07=79, 18=127, 08=99, 19=105, 09=91, 20=80, 10=122, 21=87}, 2015-01-11={00=12, 11=134, 22=58, 01=3, 12=127, 23=43, 02=4, 13=119, 03=6, 14=127, 04=16, 15=126, 05=42, 16=128, 06=69, 17=117, 07=89, 18=102, 08=104, 19=147, 09=141, 20=120, 10=117, 21=91}, 2015-01-09={00=15, 11=134, 22=67, 01=4, 12=115, 23=41, 02=6, 13=130, 03=2, 14=132, 04=16, 15=122, 05=32, 16=101, 06=76, 17=140, 07=84, 18=125, 08=106, 19=109, 09=115, 20=89, 10=113, 21=83}, 2015-01-07={00=18, 11=111, 22=64, 01=5, 12=106, 23=43, 02=5, 13=122, 03=6, 14=130, 04=13, 15=101, 05=42, 16=126, 06=68, 17=112, 07=77, 18=107, 08=86, 19=107, 09=101, 20=106, 10=114, 21=87}, 2015-01-08={00=15, 11=74, 22=54, 01=4, 12=121, 23=34, 02=7, 13=115, 03=6, 14=113, 04=13, 15=108, 05=34, 16=97, 06=51, 17=129, 07=83, 18=114, 08=105, 19=112, 09=103, 20=97, 10=111, 21=97}}".replace("=", ":")).toMap();

        DBHandler handler;

        try {
            handler = DBHandler.getDBConnection();
            handler.dropCollection("click_log");

            Parser.parseCSV(clickFile);
            Map<DateTime, Double> resNumClicks = DBQuery.getNumClicks();

			System.out.println("Test click day num");
            for (Map.Entry<DateTime, Double> entry : resNumClicks.entrySet())
			{
    			System.out.println(entry.getKey() + " : " + entry.getValue());
			}
			
            assertEquals("Correct Num Clicks file:", expectedJsonMap, resNumClicks);
        } catch (MongoAuthException e) {
            e.printStackTrace();
        }
    }

    @Test
    public void testServerConversions() {
        final Map<String, Object> expectedJsonMap = new JSONObject("{2015-01-05={00=1, 11=5, 22=3, 01=1, 12=9, 23=4, 02=1, 13=4, 14=10, 04=2, 15=3, 05=2, 16=7, 06=5, 17=10, 07=5, 18=12, 08=8, 19=9, 09=15, 20=5, 10=7, 21=10}, 2015-01-06={11=12, 22=7, 01=1, 12=6, 23=2, 13=7, 03=1, 14=9, 15=11, 05=3, 16=8, 06=1, 17=7, 07=5, 18=8, 08=11, 19=5, 09=12, 20=4, 10=10, 21=8}, 2015-01-03={00=3, 11=10, 22=5, 12=7, 23=2, 02=2, 13=7, 03=1, 14=13, 04=1, 15=12, 05=5, 16=6, 06=5, 17=7, 07=7, 18=11, 08=5, 19=4, 09=2, 20=8, 10=10, 21=10}, 2015-01-14={00=1, 11=8, 04=1, 05=3, 06=4, 07=7, 08=17, 09=9, 10=10}, 2015-01-04={00=2, 11=8, 22=7, 01=1, 12=11, 23=2, 02=2, 13=12, 14=9, 15=6, 05=3, 16=12, 06=2, 17=6, 07=5, 18=9, 08=8, 19=9, 09=5, 20=6, 10=7, 21=7}, 2015-01-01={22=3, 12=5, 13=12, 14=14, 15=10, 16=9, 17=10, 18=2, 19=11, 20=10, 21=9}, 2015-01-12={00=3, 11=13, 22=11, 12=11, 23=4, 13=13, 03=1, 14=15, 04=1, 15=22, 05=2, 16=13, 06=5, 17=8, 07=9, 18=12, 08=8, 19=10, 09=15, 20=5, 10=10, 21=8}, 2015-01-02={00=1, 11=8, 22=5, 12=12, 23=3, 13=14, 14=7, 04=2, 15=9, 05=7, 16=11, 06=4, 17=10, 07=3, 18=11, 08=8, 19=7, 09=6, 20=10, 10=11, 21=7}, 2015-01-13={00=2, 11=14, 22=4, 12=11, 23=3, 13=4, 14=11, 15=8, 05=3, 16=7, 06=7, 17=10, 07=6, 18=10, 08=11, 19=11, 09=7, 20=11, 10=8, 21=3}, 2015-01-10={00=1, 11=9, 22=10, 12=16, 23=2, 13=8, 03=1, 14=9, 04=2, 15=11, 05=2, 16=10, 06=4, 17=7, 07=6, 18=10, 08=11, 19=11, 09=8, 20=9, 10=6, 21=10}, 2015-01-11={11=11, 22=7, 12=12, 23=4, 13=13, 03=1, 14=3, 15=13, 05=5, 16=10, 06=3, 17=9, 07=3, 18=13, 08=5, 19=10, 09=7, 20=15, 10=16, 21=8}, 2015-01-09={00=1, 11=12, 22=5, 01=2, 12=8, 23=4, 02=1, 13=8, 14=15, 04=1, 15=9, 05=4, 16=9, 06=8, 17=11, 07=8, 18=14, 08=5, 19=12, 09=8, 20=7, 10=10, 21=5}, 2015-01-07={11=9, 22=3, 12=8, 23=3, 13=4, 14=13, 04=1, 15=6, 05=4, 16=15, 06=5, 17=3, 07=4, 18=19, 08=8, 19=10, 09=9, 20=7, 10=4, 21=12}, 2015-01-08={00=1, 11=5, 22=5, 12=6, 23=3, 13=11, 03=1, 14=11, 04=1, 15=11, 05=1, 16=7, 06=3, 17=13, 07=9, 18=8, 08=6, 19=13, 09=13, 20=12, 10=11, 21=11}}".replace("=", ":")).toMap();

        DBHandler handler;

        try {
            handler = DBHandler.getDBConnection();
            handler.dropCollection("server_log");

            Parser.parseCSV(serverFile);
            Map<DateTime, Double> resNumConversions = DBQuery.getNumConversions();
            
            System.out.println("Test server conversions");
            for (Map.Entry<DateTime, Double> entry : resNumConversions.entrySet())
			{
    			System.out.println(entry.getKey() + " : " + entry.getValue());
			}

            assertEquals("Correct num of Conversions", expectedJsonMap, resNumConversions);
        } catch (MongoAuthException e) {
            e.printStackTrace();
        }
    }

    @Test
    public void testCTR() {
        final Double expectedResult = 0.049213748498263744;

        DBHandler handler;

        try {
            handler = DBHandler.getDBConnection();
            handler.dropCollection("click_log");
            handler.dropCollection("impression_log");

            Parser.parseCSV(clickFile);
            Parser.parseCSV(impressionsFile);

            Double result = DBQuery.getTotalCTR(Filters.NO_FILTER);

            assertEquals("Correct Num Clicks file:", expectedResult, result);
        } catch (MongoAuthException e) {
            e.printStackTrace();
        }
    }
    
    @Test
    public void testTotalNumClicks() {
    	final Double expectedResult = 23923.0d;

        DBHandler handler;

        try {
            handler = DBHandler.getDBConnection();
            handler.dropCollection("click_log");

            Parser.parseCSV(clickFile);

            Double result = DBQuery.getTotalNumClicks();

            assertEquals("Correct Num Clicks file:", expectedResult, result);
        } catch (MongoAuthException e) {
            e.printStackTrace();
        }
    }
    
    @Test
    public void testTotalImpressions() {
    	final Double expectedResult = 486104.0d;

        DBHandler handler;

        try {
            handler = DBHandler.getDBConnection();
            handler.dropCollection("impression_log");

            Parser.parseCSV(impressionsFile);

            Double result = DBQuery.getTotalNumImpressions(Filters.NO_FILTER);

            assertEquals("Correct Num Clicks file:", expectedResult, result);
        } catch (MongoAuthException e) {
            e.printStackTrace();
        }
    }
    
    @Test
    public void testTotalCostImpressions() {
    	final Float expectedResult = 487.0555f;

        DBHandler handler;

        try {
            handler = DBHandler.getDBConnection();
            handler.dropCollection("click_log");

            Parser.parseCSV(clickFile);

            Float result = new Float(DBQuery.getTotalCostImpressions(Filters.NO_FILTER));

            assertEquals("Correct Num Clicks file:", expectedResult, result);
        } catch (MongoAuthException e) {
            e.printStackTrace();
        }
    }
    
    @Test
    public void testTotalCostClick() {
    	final Double expectedResult = 117610.865725;

        DBHandler handler;

        try {
            handler = DBHandler.getDBConnection();
            handler.dropCollection("click_log");
            handler.dropCollection("click_data");

            Parser.parseCSV(clickFile);

            Double result = DBQuery.getTotalCostClicks();

            assertEquals("Correct Num Clicks file:", expectedResult, result);
        } catch (MongoAuthException e) {
            e.printStackTrace();
        }
    }
    
    @Test
    public void testTotalCostCampaign() {
    	final Double expectedResult = 118097.921223;

        DBHandler handler;

        try {
            handler = DBHandler.getDBConnection();
            handler.dropCollection("click_log");

            Parser.parseCSV(clickFile);

            Double result = DBQuery.getTotalCostCampaign(Filters.NO_FILTER);

            assertEquals("Correct Num Clicks file:", expectedResult, result);
        } catch (MongoAuthException e) {
            e.printStackTrace();
        }
    }
    
    @Test
    public void testClickParse() {

        DBHandler handler = null;

        try {
            handler = DBHandler.getDBConnection();
            handler.dropCollection("click_log");

            JSONObject parse = Parser.parseCSV(clickFile);
            String parseAnalytics = parse.toString();
            String resAnalytics = handler.retrieveAllDocuments("click_log").toString();

            assertEquals("Correct JSON file", resAnalytics, parseAnalytics);
        } catch (MongoAuthException e) {
            e.printStackTrace();
        }
    }

    @Test
    public void testImpressionsParse() {

        DBHandler handler = null;

        try {
            handler = DBHandler.getDBConnection();
            handler.dropCollection("impression_log");

            JSONObject parse = Parser.parseCSV(impressionsFile);
            String parseAnalytics = parse.toString();
            String resAnalytics = handler.retrieveAllDocuments("impression_log").toString();

            assertEquals("Correct JSON file", resAnalytics, parseAnalytics);
        } catch (MongoAuthException e) {
            e.printStackTrace();
        }

    }

    @Test
    public void testCTROverTime() {
        final Map<String, Object> expectedCtrMap = new JSONObject("{2015-01-05={00=0.0625, 11=0.043355325164938736, 22=0.048252911813643926, 01=0.05, 12=0.04485363550519358, 23=0.039897039897039896, 02=0.059322033898305086, 13=0.04915794264906691, 03=0.046875, 14=0.047687172150691466, 04=0.07975460122699386, 15=0.053230209281164696, 05=0.04477611940298507, 16=0.04956402019274897, 06=0.04390681003584229, 17=0.054439982150825524, 07=0.04445876288659794, 18=0.049583150504607286, 08=0.043873729266987696, 19=0.05644444444444444, 09=0.05405405405405406, 20=0.04846686449060336, 10=0.04702495201535509, 21=0.042606516290726815}, 2015-01-06={00=0.05806451612903226, 11=0.04807275877003032, 22=0.04054054054054054, 01=0.05319148936170213, 12=0.04820295983086681, 23=0.060810810810810814, 02=0.03305785123966942, 13=0.05332167832167832, 03=0.045871559633027525, 14=0.0492091388400703, 04=0.04361370716510903, 15=0.05040580948312687, 05=0.03462050599201065, 16=0.042323277802791534, 06=0.0479285134037368, 17=0.04805491990846682, 07=0.05439330543933055, 18=0.05463502015226153, 08=0.05327468230694037, 19=0.04746835443037975, 09=0.05201793721973094, 20=0.04712041884816754, 10=0.05087719298245614, 21=0.04275534441805225}, 2015-01-03={00=0.050156739811912224, 11=0.05070422535211268, 22=0.049955396966993755, 01=0.03296703296703297, 12=0.043195541105434276, 23=0.04647887323943662, 02=0.039603960396039604, 13=0.04594467885607126, 03=0.03529411764705882, 14=0.04470588235294118, 04=0.03194888178913738, 15=0.05714285714285714, 05=0.04397163120567376, 16=0.05817174515235457, 06=0.06448598130841121, 17=0.048895157498824636, 07=0.05056553559547571, 18=0.05006954102920723, 08=0.052874743326488706, 19=0.05635103926096998, 09=0.041961338991041965, 20=0.04739336492890995, 10=0.05840114887505984, 21=0.04722921914357683}, 2015-01-14={00=0.05232558139534884, 11=0.06173913043478261, 01=0.037037037037037035, 12=0.0, 02=0.040983606557377046, 03=0.00819672131147541, 04=0.056818181818181816, 05=0.05955334987593052, 06=0.04222048475371384, 07=0.043016759776536316, 08=0.04957102001906578, 09=0.05334462320067739, 10=0.0518155854753162}, 2015-01-04={00=0.060126582278481014, 11=0.048488008342022944, 22=0.04063604240282685, 01=0.039603960396039604, 12=0.0471841704718417, 23=0.04874446085672083, 02=0.07766990291262135, 13=0.04413928396272683, 03=0.047619047619047616, 14=0.0458128078817734, 04=0.05333333333333334, 15=0.0484027105517909, 05=0.057233704292527825, 16=0.050591016548463354, 06=0.051829268292682924, 17=0.05647517039922103, 07=0.055598455598455596, 18=0.05146705146705147, 08=0.04437689969604863, 19=0.05505457997152349, 09=0.04503582395087001, 20=0.049794661190965095, 10=0.04341164453524004, 21=0.05236593059936909}, 2015-01-01={22=0.04454545454545455, 12=0.04421448730009407, 23=0.04638472032742155, 13=0.04738400789733465, 14=0.05547515677761698, 15=0.05021520803443329, 16=0.05174035747883349, 17=0.046313799621928164, 18=0.04759682687820812, 19=0.04887218045112782, 20=0.045953002610966055, 21=0.057065217391304345}, 2015-01-12={00=0.0440771349862259, 11=0.058054594386774315, 22=0.06097560975609756, 01=0.015267175572519083, 12=0.049573973663826494, 23=0.04182509505703422, 02=0.045454545454545456, 13=0.05202312138728324, 03=0.046153846153846156, 14=0.052353896103896104, 04=0.0345821325648415, 15=0.05591054313099041, 05=0.028026905829596414, 16=0.05616605616605617, 06=0.04621212121212121, 17=0.04312553373185312, 07=0.044409613375130615, 18=0.05491205491205491, 08=0.044751150146382264, 19=0.048482293423271504, 09=0.0489402697495183, 20=0.04498594189315839, 10=0.04788286505738029, 21=0.047674418604651166}, 2015-01-02={00=0.0375, 11=0.040658775090066906, 22=0.0661764705882353, 01=0.06837606837606838, 12=0.060154241645244216, 23=0.061518324607329845, 02=0.02631578947368421, 13=0.060353798126951096, 03=0.03571428571428571, 14=0.0485728592889334, 04=0.041379310344827586, 15=0.0494613124387855, 05=0.04094488188976378, 16=0.044226044226044224, 06=0.039651837524177946, 17=0.04680038204393505, 07=0.04909365558912387, 18=0.04518950437317784, 08=0.05146618791143028, 19=0.045023696682464455, 09=0.05016357688113413, 20=0.05521472392638037, 10=0.05327650506126798, 21=0.05097250167672703}, 2015-01-13={00=0.043596730245231606, 11=0.05224698575082207, 22=0.040032025620496396, 01=0.08196721311475409, 12=0.04400606980273141, 23=0.039318479685452164, 02=0.07079646017699115, 13=0.047762316660398645, 03=0.03676470588235294, 14=0.05285331290693221, 04=0.03598971722365039, 15=0.04975922953451043, 05=0.05408388520971302, 16=0.04866180048661801, 06=0.041638225255972695, 17=0.053776196124950576, 07=0.045771144278606964, 18=0.04701230228471002, 08=0.0499047619047619, 19=0.060980634528224144, 09=0.04983748645720477, 20=0.04339622641509434, 10=0.05009140767824497, 21=0.03917790622992935}, 2015-01-10={00=0.059800664451827246, 11=0.050747621205256006, 22=0.04991539763113367, 01=0.075, 12=0.049019607843137254, 23=0.04736842105263158, 02=0.064, 13=0.04280670785525154, 03=0.03225806451612903, 14=0.037300177619893425, 04=0.027855153203342618, 15=0.060180995475113123, 05=0.06404657933042213, 16=0.04662973222530009, 06=0.054030874785591765, 17=0.047032967032967034, 07=0.05009511731135067, 18=0.055947136563876655, 08=0.0527437400106553, 19=0.04491017964071856, 09=0.0446078431372549, 20=0.0367816091954023, 10=0.055860805860805864, 21=0.05250452625226312}, 2015-01-11={00=0.03908794788273615, 11=0.05281828931809224, 22=0.04218181818181818, 01=0.03571428571428571, 12=0.04901582400617522, 23=0.048919226393629126, 02=0.03389830508474576, 13=0.04612403100775194, 03=0.05217391304347826, 14=0.047924528301886794, 04=0.043478260869565216, 15=0.04844290657439446, 05=0.050970873786407765, 16=0.049136276391554705, 06=0.05251141552511415, 17=0.045419254658385096, 07=0.048793859649122806, 18=0.041379310344827586, 08=0.04553415061295972, 19=0.055159474671669796, 09=0.056220095693779906, 20=0.05163511187607573, 10=0.04496541122213682, 21=0.05005500550055005}, 2015-01-09={00=0.04424778761061947, 11=0.05606694560669456, 22=0.05169753086419753, 01=0.04, 12=0.04596322941646683, 23=0.051833122629582805, 02=0.05555555555555555, 13=0.05584192439862543, 03=0.01904761904761905, 14=0.05624201107797188, 04=0.048484848484848485, 15=0.05115303983228511, 05=0.04221635883905013, 16=0.04147843942505133, 06=0.059654631083202514, 17=0.058823529411764705, 07=0.04946996466431095, 18=0.050423557886244454, 08=0.05196078431372549, 19=0.04658119658119658, 09=0.047344586249485385, 20=0.041530564629024734, 10=0.047339757017176375, 21=0.050394656952034}, 2015-01-07={00=0.0547112462006079, 11=0.04964221824686941, 22=0.05186385737439222, 01=0.043478260869565216, 12=0.04600694444444445, 23=0.05402010050251256, 02=0.052083333333333336, 13=0.052699784017278616, 03=0.06315789473684211, 14=0.05548442168160478, 04=0.04498269896193772, 15=0.04132569558101473, 05=0.058011049723756904, 16=0.05296343001261034, 06=0.06023029229406555, 17=0.04601479046836483, 07=0.050130208333333336, 18=0.04401480872069107, 08=0.04567180031864047, 19=0.04311039484286865, 09=0.04695490469549047, 20=0.04768331084120558, 10=0.051075268817204304, 21=0.04948805460750853}, 2015-01-08={00=0.046153846153846156, 11=0.03345388788426763, 22=0.04466501240694789, 01=0.045454545454545456, 12=0.05416293643688451, 23=0.04467805519053877, 02=0.05511811023622047, 13=0.051778478162989645, 03=0.049586776859504134, 14=0.050491510277033066, 04=0.043333333333333335, 15=0.0469769464984776, 05=0.04563758389261745, 16=0.042395104895104896, 06=0.04218362282878412, 17=0.05753791257805531, 07=0.051139864448552064, 18=0.04838709677419355, 08=0.050822846079380445, 19=0.04770017035775128, 09=0.04701049748973072, 20=0.04472106961733518, 10=0.049289520426287745, 21=0.05749851807943094}}".replace("=",":")).toMap();

        DBHandler handler;

        try {
            handler = DBHandler.getDBConnection();
            handler.dropCollection("click_log");
            handler.dropCollection("impression_log");

            Parser.parseCSV(clickFile);
            Parser.parseCSV(impressionsFile);

            Map<DateTime, Double> result = DBQuery.getCTROverTime(Filters.NO_FILTER);

            assertEquals("Correct Hashmap", expectedCtrMap, result);
        } catch (MongoAuthException e) {
            e.printStackTrace();
        }
    }

    @Test
    public void testBouncePage() {
        Map<String, Object> expectedMap = new JSONObject("{ \"2015-01-05\" : { \"00\" : 0.5263157894736842, \"11\" : 0.34782608695652173, \"22\" : 0.3448275862068966, \"01\" : 0.6, \"12\" : 0.35789473684210527, \"23\" : 0.3225806451612903, \"02\" : 0.14285714285714285, \"13\" : 0.37962962962962965, \"03\" : 0.16666666666666666, \"14\" : 0.3, \"04\" : 0.46153846153846156, \"15\" : 0.41025641025641024, \"05\" : 0.5454545454545454, \"16\" : 0.3888888888888889, \"06\" : 0.4489795918367347, \"17\" : 0.32786885245901637, \"07\" : 0.36231884057971014, \"18\" : 0.34513274336283184, \"08\" : 0.4146341463414634, \"19\" : 0.4251968503937008, \"09\" : 0.3620689655172414, \"20\" : 0.2653061224489796, \"10\" : 0.3979591836734694, \"21\" : 0.35294117647058826 }, \"2015-01-06\" : { \"00\" : 0.6111111111111112, \"11\" : 0.44144144144144143, \"22\" : 0.38461538461538464, \"01\" : 0.4, \"12\" : 0.34210526315789475, \"23\" : 0.3333333333333333, \"02\" : 0.25, \"13\" : 0.39344262295081966, \"03\" : 0.6, \"14\" : 0.3392857142857143, \"04\" : 0.7142857142857143, \"15\" : 0.3389830508474576, \"05\" : 0.19230769230769232, \"16\" : 0.30851063829787234, \"06\" : 0.3559322033898305, \"17\" : 0.42857142857142855, \"07\" : 0.42857142857142855, \"18\" : 0.38524590163934425, \"08\" : 0.3119266055045872, \"19\" : 0.3173076923076923, \"09\" : 0.35344827586206895, \"20\" : 0.4, \"10\" : 0.3879310344827586, \"21\" : 0.323943661971831 }, \"2015-01-03\" : { \"00\" : 0.375, \"11\" : 0.3611111111111111, \"22\" : 0.3392857142857143, \"01\" : 0.6666666666666666, \"12\" : 0.3763440860215054, \"23\" : 0.42424242424242425, \"02\" : 0, \"13\" : 0.32653061224489793, \"03\" : 0.3333333333333333, \"14\" : 0.30526315789473685, \"04\" : 0.1, \"15\" : 0.3416666666666667, \"05\" : 0.12903225806451613, \"16\" : 0.373015873015873, \"06\" : 0.30434782608695654, \"17\" : 0.375, \"07\" : 0.32894736842105265, \"18\" : 0.3611111111111111, \"08\" : 0.34951456310679613, \"19\" : 0.4344262295081967, \"09\" : 0.4943820224719101, \"20\" : 0.32222222222222224, \"10\" : 0.3524590163934426, \"21\" : 0.28 }, \"2015-01-14\" : { \"00\" : 0.2222222222222222, \"11\" : 0.3591549295774648, \"01\" : 0.5, \"02\" : 0.2, \"03\" : 0, \"04\" : 0.3, \"05\" : 0.4583333333333333, \"06\" : 0.3888888888888889, \"07\" : 0.4025974025974026, \"08\" : 0.40384615384615385, \"09\" : 0.30158730158730157, \"10\" : 0.3464566929133858 }, \"2015-01-04\" : { \"00\" : 0.3157894736842105, \"11\" : 0.43010752688172044, \"22\" : 0.391304347826087, \"01\" : 0.25, \"12\" : 0.3118279569892473, \"23\" : 0.45454545454545453, \"02\" : 0.125, \"13\" : 0.2777777777777778, \"03\" : 0.8, \"14\" : 0.40860215053763443, \"04\" : 0.5, \"15\" : 0.37, \"05\" : 0.4166666666666667, \"16\" : 0.29906542056074764, \"06\" : 0.4117647058823529, \"17\" : 0.3879310344827586, \"07\" : 0.3472222222222222, \"18\" : 0.34579439252336447, \"08\" : 0.3287671232876712, \"19\" : 0.3879310344827586, \"09\" : 0.3563218390804598, \"20\" : 0.3711340206185567, \"10\" : 0.3488372093023256, \"21\" : 0.3373493975903614 }, \"2015-01-01\" : { \"22\" : 0.3877551020408163, \"12\" : 0.3617021276595745, \"23\" : 0.47058823529411764, \"13\" : 0.3125, \"14\" : 0.2782608695652174, \"15\" : 0.3904761904761905, \"16\" : 0.3181818181818182, \"17\" : 0.35714285714285715, \"18\" : 0.3333333333333333, \"19\" : 0.38461538461538464, \"20\" : 0.36363636363636365, \"21\" : 0.32142857142857145 }, \"2015-01-12\" : { \"00\" : 0.4375, \"11\" : 0.3576158940397351, \"22\" : 0.325, \"01\" : 0, \"12\" : 0.375, \"23\" : 0.21212121212121213, \"02\" : 0.3333333333333333, \"13\" : 0.3037037037037037, \"03\" : 0.3333333333333333, \"14\" : 0.3643410852713178, \"04\" : 0.4166666666666667, \"15\" : 0.30714285714285716, \"05\" : 0.52, \"16\" : 0.4420289855072464, \"06\" : 0.36065573770491804, \"17\" : 0.39603960396039606, \"07\" : 0.3411764705882353, \"18\" : 0.4765625, \"08\" : 0.4392523364485981, \"19\" : 0.30434782608695654, \"09\" : 0.41732283464566927, \"20\" : 0.3229166666666667, \"10\" : 0.36363636363636365, \"21\" : 0.35365853658536583 }, \"2015-01-02\" : { \"00\" : 0.5, \"11\" : 0.3291139240506329, \"22\" : 0.3194444444444444, \"01\" : 0.5, \"12\" : 0.3504273504273504, \"23\" : 0.5106382978723404, \"02\" : 0.3333333333333333, \"13\" : 0.3275862068965517, \"03\" : 0.5, \"14\" : 0.38144329896907214, \"04\" : 0.3333333333333333, \"15\" : 0.42574257425742573, \"05\" : 0.23076923076923078, \"16\" : 0.34444444444444444, \"06\" : 0.3902439024390244, \"17\" : 0.25510204081632654, \"07\" : 0.4153846153846154, \"18\" : 0.3655913978494624, \"08\" : 0.47674418604651164, \"19\" : 0.25263157894736843, \"09\" : 0.33695652173913043, \"20\" : 0.37037037037037035, \"10\" : 0.38, \"21\" : 0.2894736842105263 }, \"2015-01-13\" : { \"00\" : 0.4375, \"11\" : 0.4195804195804196, \"22\" : 0.36, \"01\" : 0.3, \"12\" : 0.3879310344827586, \"23\" : 0.3333333333333333, \"02\" : 0.5, \"13\" : 0.36220472440944884, \"03\" : 0.8, \"14\" : 0.36231884057971014, \"04\" : 0.35714285714285715, \"15\" : 0.3790322580645161, \"05\" : 0.3673469387755102, \"16\" : 0.3333333333333333, \"06\" : 0.39344262295081966, \"17\" : 0.4264705882352941, \"07\" : 0.42391304347826086, \"18\" : 0.39622641509433965, \"08\" : 0.33587786259541985, \"19\" : 0.436241610738255, \"09\" : 0.39855072463768115, \"20\" : 0.41304347826086957, \"10\" : 0.30656934306569344, \"21\" : 0.39344262295081966 }, \"2015-01-10\" : { \"00\" : 0.5555555555555556, \"11\" : 0.3392857142857143, \"22\" : 0.3050847457627119, \"01\" : 0.4444444444444444, \"12\" : 0.36363636363636365, \"23\" : 0.3888888888888889, \"02\" : 0.5, \"13\" : 0.35051546391752575, \"03\" : 0.25, \"14\" : 0.30952380952380953, \"04\" : 0.2, \"15\" : 0.38345864661654133, \"05\" : 0.3181818181818182, \"16\" : 0.3069306930693069, \"06\" : 0.25396825396825395, \"17\" : 0.37383177570093457, \"07\" : 0.31645569620253167, \"18\" : 0.4330708661417323, \"08\" : 0.3333333333333333, \"19\" : 0.37142857142857144, \"09\" : 0.26373626373626374, \"20\" : 0.2875, \"10\" : 0.39344262295081966, \"21\" : 0.41379310344827586 }, \"2015-01-11\" : { \"00\" : 0.3333333333333333, \"11\" : 0.41044776119402987, \"22\" : 0.3275862068965517, \"01\" : 1, \"12\" : 0.36220472440944884, \"23\" : 0.3023255813953488, \"02\" : 0, \"13\" : 0.3025210084033613, \"03\" : 0.6666666666666666, \"14\" : 0.3700787401574803, \"04\" : 0.375, \"15\" : 0.3253968253968254, \"05\" : 0.30952380952380953, \"16\" : 0.2890625, \"06\" : 0.391304347826087, \"17\" : 0.37606837606837606, \"07\" : 0.34831460674157305, \"18\" : 0.2549019607843137, \"08\" : 0.3942307692307692, \"19\" : 0.3469387755102041, \"09\" : 0.36428571428571427, \"20\" : 0.325, \"10\" : 0.3474576271186441, \"21\" : 0.3516483516483517 }, \"2015-01-09\" : { \"00\" : 0.5333333333333333, \"11\" : 0.362962962962963, \"22\" : 0.43283582089552236, \"01\" : 0, \"12\" : 0.3565217391304348, \"23\" : 0.4146341463414634, \"02\" : 0.3333333333333333, \"13\" : 0.36923076923076925, \"03\" : 0, \"14\" : 0.3712121212121212, \"04\" : 0.375, \"15\" : 0.36885245901639346, \"05\" : 0.34375, \"16\" : 0.33663366336633666, \"06\" : 0.27631578947368424, \"17\" : 0.3357142857142857, \"07\" : 0.3333333333333333, \"18\" : 0.376, \"08\" : 0.4811320754716981, \"19\" : 0.3486238532110092, \"09\" : 0.3652173913043478, \"20\" : 0.47191011235955055, \"10\" : 0.32142857142857145, \"21\" : 0.27710843373493976 }, \"2015-01-07\" : { \"00\" : 0.5, \"11\" : 0.3963963963963964, \"22\" : 0.4375, \"01\" : 0.6, \"12\" : 0.3490566037735849, \"23\" : 0.3488372093023256, \"02\" : 0, \"13\" : 0.3360655737704918, \"03\" : 0.3333333333333333, \"14\" : 0.33076923076923076, \"04\" : 0.46153846153846156, \"15\" : 0.4158415841584158, \"05\" : 0.30952380952380953, \"16\" : 0.3492063492063492, \"06\" : 0.27941176470588236, \"17\" : 0.39285714285714285, \"07\" : 0.38961038961038963, \"18\" : 0.34579439252336447, \"08\" : 0.38372093023255816, \"19\" : 0.3177570093457944, \"09\" : 0.36633663366336633, \"20\" : 0.3867924528301887, \"10\" : 0.38596491228070173, \"21\" : 0.3448275862068966 }, \"2015-01-08\" : { \"00\" : 0.2, \"11\" : 0.28378378378378377, \"22\" : 0.3333333333333333, \"01\" : 0.25, \"12\" : 0.35537190082644626, \"23\" : 0.3235294117647059, \"02\" : 0.42857142857142855, \"13\" : 0.3739130434782609, \"03\" : 0.5, \"14\" : 0.4424778761061947, \"04\" : 0.46153846153846156, \"15\" : 0.4537037037037037, \"05\" : 0.4117647058823529, \"16\" : 0.32989690721649484, \"06\" : 0.3333333333333333, \"17\" : 0.3875968992248062, \"07\" : 0.25301204819277107, \"18\" : 0.3333333333333333, \"08\" : 0.3333333333333333, \"19\" : 0.33035714285714285, \"09\" : 0.34951456310679613, \"20\" : 0.4536082474226804, \"10\" : 0.3783783783783784, \"21\" : 0.3402061855670103 } }").toMap();

        DBHandler handler;

        try {
            handler = DBHandler.getDBConnection();
            handler.dropCollection("server_log");

            Parser.parseCSV(serverFile);

            Map<DateTime, Double> result = DBQuery.getBounceRateByPage();
            
            System.out.println("Test bounce page");
            for (Map.Entry<DateTime, Double> entry : result.entrySet())
			{
    			System.out.println(entry.getKey() + " : " + entry.getValue());
			}

            assertEquals("Correct Hashmap", expectedMap, result);
        } catch (MongoAuthException e) {
            e.printStackTrace();
        }
    }

    @Test
    public void testBounceTime() {
        Map<String, Object> expectedMap = new JSONObject("{ \"2015-01-05\" : { \"00\" : 0.8421052631578947, \"11\" : 0.717391304347826, \"22\" : 0.6551724137931034, \"01\" : 0.4, \"12\" : 0.631578947368421, \"23\" : 0.7096774193548387, \"02\" : 0.5714285714285714, \"13\" : 0.6666666666666666, \"03\" : 0.3333333333333333, \"14\" : 0.63, \"04\" : 0.7692307692307693, \"15\" : 0.7094017094017094, \"05\" : 0.48484848484848486, \"16\" : 0.6203703703703703, \"06\" : 0.7142857142857143, \"17\" : 0.6065573770491803, \"07\" : 0.6231884057971014, \"18\" : 0.6106194690265486, \"08\" : 0.6341463414634146, \"19\" : 0.6929133858267716, \"09\" : 0.646551724137931, \"20\" : 0.5510204081632653, \"10\" : 0.7142857142857143, \"21\" : 0.5882352941176471 }, \"2015-01-06\" : { \"00\" : 0.7222222222222222, \"11\" : 0.6396396396396397, \"22\" : 0.5, \"01\" : 0.8, \"12\" : 0.6140350877192983, \"23\" : 0.7333333333333333, \"02\" : 0.75, \"13\" : 0.6557377049180327, \"03\" : 1, \"14\" : 0.6428571428571429, \"04\" : 0.5, \"15\" : 0.6779661016949152, \"05\" : 0.46153846153846156, \"16\" : 0.6063829787234043, \"06\" : 0.6101694915254238, \"17\" : 0.7333333333333333, \"07\" : 0.6813186813186813, \"18\" : 0.6721311475409836, \"08\" : 0.6605504587155964, \"19\" : 0.625, \"09\" : 0.7155172413793104, \"20\" : 0.65, \"10\" : 0.5948275862068966, \"21\" : 0.5774647887323944 }, \"2015-01-03\" : { \"00\" : 0.8125, \"11\" : 0.6203703703703703, \"22\" : 0.6607142857142857, \"01\" : 0.3333333333333333, \"12\" : 0.6344086021505376, \"23\" : 0.7272727272727273, \"02\" : 0.25, \"13\" : 0.6428571428571429, \"03\" : 0.6666666666666666, \"14\" : 0.6842105263157895, \"04\" : 0.5, \"15\" : 0.6333333333333333, \"05\" : 0.5161290322580645, \"16\" : 0.5714285714285714, \"06\" : 0.6666666666666666, \"17\" : 0.6442307692307693, \"07\" : 0.618421052631579, \"18\" : 0.5925925925925926, \"08\" : 0.6699029126213593, \"19\" : 0.680327868852459, \"09\" : 0.7528089887640449, \"20\" : 0.7111111111111111, \"10\" : 0.5901639344262295, \"21\" : 0.5466666666666666 }, \"2015-01-14\" : { \"00\" : 0.6666666666666666, \"11\" : 0.7323943661971831, \"01\" : 0.75, \"02\" : 0.8, \"03\" : 1, \"04\" : 0.55, \"05\" : 0.6041666666666666, \"06\" : 0.6666666666666666, \"07\" : 0.5844155844155844, \"08\" : 0.6442307692307693, \"09\" : 0.6190476190476191, \"10\" : 0.6614173228346457 }, \"2015-01-04\" : { \"00\" : 0.6842105263157895, \"11\" : 0.6559139784946236, \"22\" : 0.6521739130434783, \"01\" : 0.75, \"12\" : 0.5806451612903226, \"23\" : 0.6666666666666666, \"02\" : 0.625, \"13\" : 0.6666666666666666, \"03\" : 0.4, \"14\" : 0.6451612903225806, \"04\" : 0.6875, \"15\" : 0.72, \"05\" : 0.6111111111111112, \"16\" : 0.7009345794392523, \"06\" : 0.6862745098039216, \"17\" : 0.5689655172413793, \"07\" : 0.6388888888888888, \"18\" : 0.6822429906542056, \"08\" : 0.684931506849315, \"19\" : 0.6810344827586207, \"09\" : 0.6781609195402298, \"20\" : 0.6185567010309279, \"10\" : 0.6511627906976745, \"21\" : 0.6626506024096386 }, \"2015-01-01\" : { \"22\" : 0.7142857142857143, \"12\" : 0.7021276595744681, \"23\" : 0.7352941176470589, \"13\" : 0.6666666666666666, \"14\" : 0.6434782608695652, \"15\" : 0.6285714285714286, \"16\" : 0.6909090909090909, \"17\" : 0.6326530612244898, \"18\" : 0.5784313725490197, \"19\" : 0.6153846153846154, \"20\" : 0.5795454545454546, \"21\" : 0.6904761904761905 }, \"2015-01-12\" : { \"00\" : 0.625, \"11\" : 0.6556291390728477, \"22\" : 0.575, \"01\" : 0, \"12\" : 0.625, \"23\" : 0.5454545454545454, \"02\" : 0.6666666666666666, \"13\" : 0.5407407407407407, \"03\" : 0.6666666666666666, \"14\" : 0.6356589147286822, \"04\" : 0.4166666666666667, \"15\" : 0.5785714285714286, \"05\" : 0.64, \"16\" : 0.6739130434782609, \"06\" : 0.6557377049180327, \"17\" : 0.7029702970297029, \"07\" : 0.5764705882352941, \"18\" : 0.6953125, \"08\" : 0.6822429906542056, \"19\" : 0.6695652173913044, \"09\" : 0.7322834645669292, \"20\" : 0.6875, \"10\" : 0.6363636363636364, \"21\" : 0.6341463414634146 }, \"2015-01-02\" : { \"00\" : 0.4166666666666667, \"11\" : 0.620253164556962, \"22\" : 0.6388888888888888, \"01\" : 0.875, \"12\" : 0.7008547008547008, \"23\" : 0.7021276595744681, \"02\" : 0.6666666666666666, \"13\" : 0.646551724137931, \"03\" : 0.5, \"14\" : 0.6907216494845361, \"04\" : 0.6666666666666666, \"15\" : 0.7128712871287128, \"05\" : 0.46153846153846156, \"16\" : 0.6444444444444445, \"06\" : 0.6585365853658537, \"17\" : 0.6224489795918368, \"07\" : 0.676923076923077, \"18\" : 0.6021505376344086, \"08\" : 0.6976744186046512, \"19\" : 0.5473684210526316, \"09\" : 0.6413043478260869, \"20\" : 0.7037037037037037, \"10\" : 0.65, \"21\" : 0.6578947368421053 }, \"2015-01-13\" : { \"00\" : 0.625, \"11\" : 0.7062937062937062, \"22\" : 0.72, \"01\" : 0.8, \"12\" : 0.7155172413793104, \"23\" : 0.5666666666666667, \"02\" : 0.75, \"13\" : 0.7322834645669292, \"03\" : 1, \"14\" : 0.6811594202898551, \"04\" : 0.5714285714285714, \"15\" : 0.6370967741935484, \"05\" : 0.7551020408163265, \"16\" : 0.6166666666666667, \"06\" : 0.7213114754098361, \"17\" : 0.7132352941176471, \"07\" : 0.6630434782608695, \"18\" : 0.6320754716981132, \"08\" : 0.6412213740458015, \"19\" : 0.6174496644295302, \"09\" : 0.6231884057971014, \"20\" : 0.6956521739130435, \"10\" : 0.635036496350365, \"21\" : 0.639344262295082 }, \"2015-01-10\" : { \"00\" : 0.4444444444444444, \"11\" : 0.625, \"22\" : 0.576271186440678, \"01\" : 0.6666666666666666, \"12\" : 0.6636363636363637, \"23\" : 0.8055555555555556, \"02\" : 0.875, \"13\" : 0.6494845360824743, \"03\" : 0.5, \"14\" : 0.6309523809523809, \"04\" : 0.5, \"15\" : 0.6541353383458647, \"05\" : 0.7954545454545454, \"16\" : 0.6237623762376238, \"06\" : 0.6190476190476191, \"17\" : 0.5233644859813084, \"07\" : 0.5822784810126582, \"18\" : 0.6614173228346457, \"08\" : 0.6161616161616161, \"19\" : 0.5523809523809524, \"09\" : 0.6373626373626373, \"20\" : 0.725, \"10\" : 0.6557377049180327, \"21\" : 0.5747126436781609 }, \"2015-01-11\" : { \"00\" : 0.75, \"11\" : 0.6716417910447762, \"22\" : 0.5689655172413793, \"01\" : 0.6666666666666666, \"12\" : 0.6299212598425197, \"23\" : 0.6744186046511628, \"02\" : 0.5, \"13\" : 0.680672268907563, \"03\" : 0.6666666666666666, \"14\" : 0.7559055118110236, \"04\" : 0.625, \"15\" : 0.6666666666666666, \"05\" : 0.5952380952380952, \"16\" : 0.65625, \"06\" : 0.5652173913043478, \"17\" : 0.6495726495726496, \"07\" : 0.7191011235955056, \"18\" : 0.5784313725490197, \"08\" : 0.6442307692307693, \"19\" : 0.6666666666666666, \"09\" : 0.5857142857142857, \"20\" : 0.6416666666666667, \"10\" : 0.635593220338983, \"21\" : 0.6373626373626373 }, \"2015-01-09\" : { \"00\" : 0.7333333333333333, \"11\" : 0.6518518518518519, \"22\" : 0.6567164179104478, \"01\" : 0.25, \"12\" : 0.6260869565217392, \"23\" : 0.7317073170731707, \"02\" : 0.6666666666666666, \"13\" : 0.6692307692307692, \"03\" : 1, \"14\" : 0.6439393939393939, \"04\" : 0.4375, \"15\" : 0.680327868852459, \"05\" : 0.59375, \"16\" : 0.6435643564356436, \"06\" : 0.631578947368421, \"17\" : 0.6928571428571428, \"07\" : 0.7142857142857143, \"18\" : 0.648, \"08\" : 0.6792452830188679, \"19\" : 0.6238532110091743, \"09\" : 0.6521739130434783, \"20\" : 0.5955056179775281, \"10\" : 0.5982142857142857, \"21\" : 0.6385542168674698 }, \"2015-01-07\" : { \"00\" : 0.7222222222222222, \"11\" : 0.6486486486486487, \"22\" : 0.703125, \"01\" : 0.6, \"12\" : 0.6037735849056604, \"23\" : 0.6744186046511628, \"02\" : 0.6, \"13\" : 0.6721311475409836, \"03\" : 0.6666666666666666, \"14\" : 0.6846153846153846, \"04\" : 0.38461538461538464, \"15\" : 0.7425742574257426, \"05\" : 0.40476190476190477, \"16\" : 0.6349206349206349, \"06\" : 0.6764705882352942, \"17\" : 0.7321428571428571, \"07\" : 0.7012987012987013, \"18\" : 0.6542056074766355, \"08\" : 0.7093023255813954, \"19\" : 0.6822429906542056, \"09\" : 0.6534653465346535, \"20\" : 0.6226415094339622, \"10\" : 0.6666666666666666, \"21\" : 0.6896551724137931 }, \"2015-01-08\" : { \"00\" : 0.5333333333333333, \"11\" : 0.6756756756756757, \"22\" : 0.6851851851851852, \"01\" : 0.75, \"12\" : 0.6528925619834711, \"23\" : 0.6176470588235294, \"02\" : 0.7142857142857143, \"13\" : 0.6608695652173913, \"03\" : 0.5, \"14\" : 0.6991150442477876, \"04\" : 0.7692307692307693, \"15\" : 0.6388888888888888, \"05\" : 0.6470588235294118, \"16\" : 0.5773195876288659, \"06\" : 0.7254901960784313, \"17\" : 0.6511627906976745, \"07\" : 0.5542168674698795, \"18\" : 0.6228070175438597, \"08\" : 0.6666666666666666, \"19\" : 0.6607142857142857, \"09\" : 0.6504854368932039, \"20\" : 0.7835051546391752, \"10\" : 0.6846846846846847, \"21\" : 0.6082474226804123 } }").toMap();

        DBHandler handler;

        try {
            handler = DBHandler.getDBConnection();
            handler.dropCollection("server_log");

            Parser.parseCSV(serverFile);

            Map<DateTime, Double> result = DBQuery.getBounceRateByTime();

            assertEquals("Correct Hashmap", expectedMap, result);
        } catch (MongoAuthException e) {
            e.printStackTrace();
        }
    }
}
